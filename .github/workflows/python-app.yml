# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: [push, pull_request]

permissions:
  contents: read

jobs:
  validate_unix:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: check pylint 
      run: pylint JSONLibrary --disable=R,C,W0703,W0212,W1203
    
    - name: check doc generation
      run: python -m robot.libdoc JSONLibrary docs/JSONLibrary.html"
    
    - name: check black
      run: black . --check --diff
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: validate
      run: |
        pytest --cov-config=tests/.coveragerc --cov --cov-report term tests/
        coverage xml --rcfile tests/.coveragerc
        coverage html --rcfile tests/.coveragerc
        robot -d tests/__out__/robot acceptance/

  validate_windows:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: validate
      run: |
        pytest --cov-config=tests/.coveragerc --cov --cov-report term tests/
        coverage xml --rcfile tests/.coveragerc
        coverage html --rcfile tests/.coveragerc
        robot -d tests/__out__/robot acceptance/
